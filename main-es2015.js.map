{"version":3,"sources":["./src/app/employee/employee.component.ts","./src/app/employee/employee.component.html","./src/environments/environment.ts","./src/app/company/dashboard/dashboard.component.ts","./src/app/company/dashboard/dashboard.component.html","./src/app/employee/add-employee/add-employee.component.ts","./src/app/employee/add-employee/add-employee.component.html","./src/app/company/company.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/shared.service.ts","./src/app/register-company/register-company.component.ts","./src/app/register-company/register-company.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/employee/employee-list/employee-list.component.ts","./src/app/employee/employee-list/employee-list.component.html","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SharedService } from 'src/app/shared.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  companyDetails: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private sharedServ: SharedService) { }\n\n  ngOnInit(): void {\n     this.companyDetails = JSON.parse(localStorage.getItem('company'));\n    \n     this.sharedServ.verifyCompany()\n     .subscribe(\n       res => console.log(res),\n       err => \n       {\n        this.router.navigate([''])\n         console.log(err)}\n     )\n    \n  }\n\n\n  onEmployeeList() {\n  \n      this.router.navigate(['/dashboard', this.companyDetails.id], {relativeTo: this.route})\n    \n  }\n\n  onAddEmployee() {\n  \n      this.router.navigate(['/dashboard'])\n   \n  }\n}\n","<div>\n    <app-header></app-header>\n</div>\n\n<div class=\"container\" style=\"margin-top: 30px\">\n    <button \n    type=\"button\" \n    class=\"btn btn-primary\"\n    (click)=\"onAddEmployee()\">Add Employee</button>\n    <button \n    type=\"button\" \n    class=\"btn btn-secondary\"\n    (click)=\"onEmployeeList()\">Employee List</button>\n\n    \n     <router-outlet></router-outlet>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { SharedService } from 'src/app/shared.service';\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.css']\n})\nexport class AddEmployeeComponent implements OnInit {\n\ncompanyDetails: any;\npopupMsg: boolean = false;\n\n  constructor(private sharedServ: SharedService) { }\n\n  ngOnInit(): void {\n\n    this.companyDetails = JSON.parse(localStorage.getItem('company'));\n    \n  }\n\n  onAddEmployee(regForm: NgForm) {\n    regForm.value[\"companyId\"] = this.companyDetails.id;\n    // console.log({...regForm.value,companyid: this.companyDetails.id})\n    this.sharedServ.registerEmployee(regForm.value).subscribe(\n      res => \n      {\n        if(res.success == 1) {\n              this.popupMsg = true;\n              setTimeout( () => \n              {\n                this.popupMsg = false\n              },2000)\n              regForm.reset();  \n\n        }\n\n      },\n      err => console.log(err)\n    )\n  }\n\n}\n","<form #regForm='ngForm' (ngSubmit)=\"onAddEmployee(regForm)\" style=\"margin-top: 30px\">\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Name</label>\n      <input \n      type=\"text\" \n      class=\"form-control\" \n      id=\"exampleInputEmail1\" \n      placeholder=\"Enter Name\"\n      name=\"name\"\n      ngModel\n      required\n      #name=\"ngModel\">\n      <div *ngIf=\"name.touched\" style=\"color: red\">\n        <span\n        style=\"color: red\" \n        *ngIf=\"name.errors?.required\">Please enter the Name</span>\n    </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">Age</label>\n      <input \n      type=\"text\" \n      class=\"form-control\" \n      id=\"exampleInputPassword1\" \n      placeholder=\"Enter Age\"\n      name=\"age\"\n      ngModel\n      required\n      pattern=\"^(?:1[01][0-9]|120|1[7-9]|[2-9][0-9])$\"\n      #age=\"ngModel\">\n      <div *ngIf=\"age.touched\" style=\"color: red\">\n        <span\n        style=\"color: red\" \n        *ngIf=\"age.errors?.required\">Please enter the Age</span>\n        <span\n        style=\"color: red\" \n        *ngIf=\"age.errors?.pattern\">Please enter the age between 17 to 120</span>\n    </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Salary</label>\n        <input \n        type=\"text\" \n        class=\"form-control\" \n        id=\"exampleInputPassword1\" \n        placeholder=\"Enter Salary\"\n        name=\"salary\"\n        ngModel\n        required\n        pattern=\"^[0-9]*$\"\n        #salary=\"ngModel\">\n        <div *ngIf=\"salary.touched\" style=\"color: red\">\n          <span\n          style=\"color: red\" \n          *ngIf=\"salary.errors?.required\">Please enter the salary</span>\n          <span\n          style=\"color: red\" \n          *ngIf=\"salary.errors?.pattern\">Please enter number only</span>\n      </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Phone Number</label>\n        <input \n        type=\"text\" \n        class=\"form-control\" \n        id=\"exampleInputPassword1\" \n        placeholder=\"Enter Phone Number\"\n        name=\"phonenumber\"\n        ngModel\n        pattern=\"^[2-9]{2}[0-9]{8}$\"\n        required\n        #phonenumber=\"ngModel\">\n        <div *ngIf=\"phonenumber.touched\" style=\"color: red\">\n          <span\n          style=\"color: red\" \n          *ngIf=\"phonenumber.errors?.required\">Please enter the phonenumber</span>\n          <span\n          style=\"color: red\" \n          *ngIf=\"phonenumber.errors?.pattern\">Please enter the correct phonenumber</span>\n      </div>\n      </div>\n    <button \n    type=\"submit\" \n    class=\"btn btn-primary\"\n    [disabled]=\"!regForm.valid\">Submit</button>\n  </form>\n  <div\n  *ngIf = \"popupMsg\" \n  class=\"pop-up\">\n    <h5 style=\"color:white\">Employee sucessfully created.</h5>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'evapp';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { CompanyComponent } from './company/company.component';\nimport { DashboardComponent } from './company/dashboard/dashboard.component';\nimport { HeaderComponent } from './header/header.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EmployeeListComponent } from './employee/employee-list/employee-list.component';\nimport { AddEmployeeComponent } from './employee/add-employee/add-employee.component';\nimport { RegisterCompanyComponent } from './register-company/register-company.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    CompanyComponent,\n    DashboardComponent,\n    HeaderComponent,\n    EmployeeComponent,\n    EmployeeListComponent,\n    AddEmployeeComponent,\n    RegisterCompanyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  companyDetails: any;\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.companyDetails = JSON.parse(localStorage.getItem('company'));\n  }\n\n  onLogout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('company')\n\n      this.router.navigate([''])\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\">{{companyDetails.name}}</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <form class=\"form-inline my-2 my-lg-0\" style=\"position: absolute; right: 20px\">\n        <button \n        class=\"btn btn-outline-success my-2 my-sm-0\" \n        type=\"button\"\n        (click)=\"onLogout()\">Logout</button>\n      </form>\n    </div>\n  </nav>","\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  private companyLoginurl = \"http://localhost:3000/companyApi/companyLogin\";\n  private registerEmployeeUrl = \"http://localhost:3000/employeeApi/registerEmployee\"\n  private registerCompanyUrl = \"http://localhost:3000/companyApi/registerCompany\";\n  private verifyCompanyUrl = \"http://localhost:3000/companyApi/verifyToken\";\n\n  constructor(private http: HttpClient) { }\n  \n  companyLogin(data: {\n    email: string;\n    password: string;\n  }) {\n    return this.http.post<any>(this.companyLoginurl, data);\n  }\n\n  employeeList(id: number) {\n    const employeeListUrl = \"http://localhost:3000/employeeApi/employeeList/\" + id;\n    return this.http.get<any>(employeeListUrl, {\n      observe: 'body'\n    })\n  }\n\n  registerEmployee(data: any) {\n    return this.http.post<any>(this.registerEmployeeUrl, data);\n  }\n\n  registerCompany(data: any) {\n    return this.http.post<any>(this.registerCompanyUrl, data);\n  }\n\n  verifyCompany() {\n    const token = localStorage.getItem(\"token\");\n\n    return this.http.get<any>(this.verifyCompanyUrl, {\n      observe: \"body\",\n      headers: new HttpHeaders().set(\"Authorization\", \"Bearer \" + token)\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-register-company',\n  templateUrl: './register-company.component.html',\n  styleUrls: ['./register-company.component.css']\n})\nexport class RegisterCompanyComponent implements OnInit {\n\n  message: string\n\n  constructor(private router: Router, private sharedServ: SharedService) { }\n\n  ngOnInit(): void {\n  }\n\n  onCompanyRegister(regForm: NgForm) {\n    this.sharedServ.registerCompany(regForm.value)\n    .subscribe(\n      res => {\n        if(res.success == 0) {\n          this.message = \"Registration is not completed\"\n        } else {\n          console.log(res)\n          this.router.navigate([''])\n        }\n      },\n      err => console.log(err)\n    )\n  }\n\n}\n","<div class=\"global-container\">\n\t<div class=\"card login-form\">\n\t<div class=\"card-body\">\n\t\t<h3 class=\"card-title text-center\">Company Registration Form</h3>\n\t\t<div class=\"card-text\">\n\t\t\t<!--\n\t\t\t<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">Incorrect username or password.</div> -->\n\t\t\t<form #regForm='ngForm' (ngSubmit)=\"onCompanyRegister(regForm)\">\n\t\t\t\t<!-- to error: add class \"has-danger\" -->\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"exampleInputEmail1\">Name</label>\n                    <input \n                    type=\"text\" \n                    class=\"form-control form-control-sm\" \n                    id=\"exampleInputEmail1\" \n                    aria-describedby=\"emailHelp\"\n                    name=\"name\"\n                    ngModel\n                    required\n                    #name=\"ngModel\">\n                    <div *ngIf=\"name.touched\" style=\"color: red\">\n                        <span\n                        style=\"color: red\" \n                        *ngIf=\"name.errors?.required\">Please enter the name</span>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n\t\t\t\t\t<label for=\"exampleInputEmail1\">Email</label>\n                    <input \n                    type=\"email\" \n                    class=\"form-control form-control-sm\" \n                    id=\"exampleInputEmail1\" \n                    aria-describedby=\"emailHelp\"\n                    name=\"email\"\n                    ngModel\n                    required\n                    email\n                    #email=\"ngModel\">\n                    <div *ngIf=\"email.touched\" style=\"color: red\">\n                        <span\n                        style=\"color: red\" \n                        *ngIf=\"email.errors?.required\">Please enter the email</span>\n                        <span\n                        style=\"color: red\" \n                        *ngIf=\"email.errors?.email\">Please enter the correct email</span>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n\t\t\t\t\t<label for=\"exampleInputEmail1\">Phone</label>\n                    <input \n                    type=\"text\" \n                    class=\"form-control form-control-sm\" \n                    id=\"exampleInputEmail1\" \n                    aria-describedby=\"emailHelp\"\n                    name=\"phone\"\n                    ngModel\n                    required\n                    pattern=\"^[2-9]{2}[0-9]{8}$\"\n                    #phone=\"ngModel\">\n                    <div *ngIf=\"phone.touched\" style=\"color: red\">\n                        <span\n                        style=\"color: red\" \n                        *ngIf=\"phone.errors?.required\">Please enter the phonenumber</span>\n                        <span\n                        style=\"color: red\" \n                        *ngIf=\"phone.errors?.pattern\">Please enter the correct phonenumber</span>\n                    </div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"exampleInputPassword1\">Password</label>\n                    <input \n                    type=\"password\" \n                    class=\"form-control form-control-sm\" \n                    id=\"exampleInputPassword1\"\n                    name=\"password\"\n                    ngModel\n                    required\n                    #password=\"ngModel\">\n                    <div *ngIf=\"password.touched\" style=\"color: red\">\n                        <span\n                        style=\"color: red\" \n                        *ngIf=\"password.errors?.required\">Please enter the password</span>\n                    </div>\n                </div>\n                <div style=\"color: red; padding: 10px\">\n                    <!-- {{message}} -->\n                </div>\n                <button \n                type=\"submit\" \n                [disabled]=\"!regForm.valid\"\n                class=\"btn btn-primary btn-block\">Sign up</button>\n\t\t\t</form>\n\t\t</div>\n\t</div>\n</div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { CompanyComponent } from './company/company.component';\nimport { DashboardComponent } from './company/dashboard/dashboard.component';\nimport { EmployeeComponent } from './employee/employee.component';\nimport { EmployeeListComponent } from './employee/employee-list/employee-list.component';\nimport { AddEmployeeComponent } from './employee/add-employee/add-employee.component';\nimport { RegisterCompanyComponent } from './register-company/register-company.component';\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, children: [\n    {path: '', component: AddEmployeeComponent},\n    {path: ':id', component: EmployeeListComponent}\n  ]},\n  {path: 'registration', component: RegisterCompanyComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n// import { LoginService } from '../login.service';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n   message: String\n  constructor(\n    private router: Router,\n    private sharedServ: SharedService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogin(regForm: NgForm) {\n    console.log(regForm.value)\n    this.sharedServ.companyLogin(regForm.value)\n    .subscribe(\n      res => {\n        if(res.success == 0) {\n          this.message = \"Email or Password is incorrect, please try again.\"\n        } else {\n          console.log(res.message)\n          localStorage.setItem(\"token\", res.token);\n          localStorage.setItem(\"company\", JSON.stringify(res.message));\n          this.router.navigate([\"/dashboard\"])\n        }\n      },\n      err => console.log(err)\n    )\n    \n  }\n\n}\n","<div class=\"global-container\">\n\t<div class=\"card login-form\">\n\t<div class=\"card-body\">\n\t\t<h3 class=\"card-title text-center\">Company Login</h3>\n\t\t<div class=\"card-text\">\n\t\t\t<!--\n\t\t\t<div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">Incorrect username or password.</div> -->\n\t\t\t<form #regForm='ngForm' (ngSubmit)=\"onLogin(regForm)\">\n\t\t\t\t<!-- to error: add class \"has-danger\" -->\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"exampleInputEmail1\">Email address</label>\n                    <input \n                    type=\"email\" \n                    class=\"form-control form-control-sm\" \n                    id=\"exampleInputEmail1\" \n                    aria-describedby=\"emailHelp\"\n                    name=\"email\"\n                    ngModel\n                    required\n                    email\n                    #email=\"ngModel\">\n                    <div *ngIf=\"email.touched\" style=\"color: red\">\n                        <span\n                        style=\"color: red\" \n                        *ngIf=\"email.errors?.required\">Please enter the email</span>\n                        <span\n                        style=\"color: red\" \n                        *ngIf=\"email.errors?.email\">Please enter the correct email</span>\n                    </div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t<label for=\"exampleInputPassword1\">Password</label>\n                    <input \n                    type=\"password\" \n                    class=\"form-control form-control-sm\" \n                    id=\"exampleInputPassword1\"\n                    name=\"password\"\n                    ngModel\n                    required\n                    #password=\"ngModel\">\n\n                    <div style=\"color: red; padding: 10px\">\n                        {{message}}\n                    </div>\n\n                    <div *ngIf=\"password.touched\" style=\"color: red\">\n                        <span\n                        style=\"color: red\" \n                        *ngIf=\"password.errors?.required\">Please enter the password</span>\n                    </div>\n\t\t\t\t</div>\n                <button \n                type=\"submit\" \n                [disabled]=\"!regForm.valid\"\n                class=\"btn btn-primary btn-block\">Sign in</button>\n\t\t\t\t\n\t\t\t\t<div class=\"sign-up\">\n\t\t\t\t\tDon't have an account? <a routerLink=\"/registration\">Create One</a>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t</div>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SharedService } from 'src/app/shared.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n   employees:any[]\n   companyDetails: any\n\n  constructor(private shareServ: SharedService) { }\n\n  ngOnInit(): void {\n\n    this.companyDetails = JSON.parse(localStorage.getItem('company'));    \n\n\n    this.shareServ.employeeList(this.companyDetails.id).subscribe(\n      res =>\n       {\n        this.employees = res.message\n        console.log(this.employees)\n      },\n      err => console.log(err)\n    )\n  }\n\n}\n","<table class=\"table\" style=\"margin-top: 30px\">\n    <thead>\n      <tr>\n        <th scope=\"col\">id</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">age</th>\n        <th scope=\"col\">phonenumber</th>\n        <th scope=\"col\">salary</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let employee of employees\">\n        <th scope=\"row\">{{employee.id}}</th>\n        <td>{{employee.name}}</td>\n        <td>{{employee.age}}</td>\n        <td>{{employee.phonenumber}}</td>\n        <td>{{employee.salary}}</td>\n      </tr>\n    </tbody>\n  </table>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}